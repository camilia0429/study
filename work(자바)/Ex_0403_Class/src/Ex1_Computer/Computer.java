package Ex1_Computer;

public class Computer {
//	컴퓨터의 대량생산을 위한 설계도를 만드는 작업
//	클래스의 구성요소
//	1) 멤버, 속성, 변수, 필드 ...
//	2) 메서드, 기능, 함수 ...
	
	int ssd = 1024; // 용량
	int ram = 16; // 메모리크기
	double cpu = 4.8;
	String color = "white";
	
//	함수는 함수 안에서 정의될 수 없다.
//	함수는 함수 밖에서 호출할 수 없다.
	
//	메서드란 어떤 작업을 수행하기 위한 명령문의 집합
//	메서드를 사용하는 가장 큰 이유는 반복적으로 사용되는 코드를 줄이기 위해서.
//	자주 사용되는 내용의 코드를 메서드로 작성해 두고 필요할 때마다 호출만 하면 된다.
	
//	메서드의 구성
//	접근제한자(public) 변환형(void) 메서드명(getInfo/매개변수(인자,아규먼츠,파라미터)){
//	명령
//	
//		return 반환값;
//	};
	
	public void getInfo() {
		System.out.println("ssd : "+ssd);
		System.out.println("ram : "+ram);
		System.out.println("cpu : "+cpu);
		System.out.println("color : "+color);
		System.out.println("--------------------");
	}
	
//	접근제한자
//	1) public : 모든 접근을 허용. 같은 프로젝트 내의 모든 객체들이 사용할 수 있도록 허용
//	2) private : 현재 클래스 내에서만 사용을 허가
//	3) protected : 상속관계의 객체들에만 사용을 허가
//	4) default : 같은 패키지내의 객체에만 사용을 허가

//	반환형
//	메서드가 처음부터 끝까지 수행을 마친 후에 반환해야 할 값이 있을경우에 기입
//	int, boolean, float, double, String ...기본자료형을 포함
//	사용자가 직접 만든 객체로도 변환이 가능.
//	아무것도 반환하지 않을 때는 void 사용.
	
//	메서드명(함수명)
//	메서드의 이름 : 첫글자는 소문자로 시작
	
//	매개변수
//	외부에서 해당 메서드를 통해 특정 값을 전달하고자 할 때
//	처리할 수 있도록 하는 역할
	
//	반환값
//	연산이 끝난 후 값을 돌려줘야 할 때 return 반환값; 작성
//	이 때 반환형의 자료형은 반환값과 일치해야 한다.
	
	
	
	
	
}
